plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.etalente'
version = '0.0.1-SNAPSHOT'
description = 'Backend application for etalente'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-ses:3.1.1'
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.7.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'org.postgresql:postgresql'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:postgresql:1.19.3'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.intuit.karate:karate-junit5:1.4.1'
	testImplementation('com.github.javafaker:javafaker:1.0.2') {
		exclude group: 'org.yaml', module: 'snakeyaml'
	}
	testImplementation 'org.yaml:snakeyaml:2.2'
}

sourceSets {
	test {
		resources {
			srcDir 'src/test/java'
			exclude '**/*.java'
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

task unitTest(type: Test) {
	useJUnitPlatform {
		includeTags 'unit'
	}
}

task integrationTest(type: Test) {
	useJUnitPlatform {
		includeTags 'integration'
	}
}

task acceptanceTest(type: Test) {
	useJUnitPlatform {
		includeTags 'acceptance'
	}
}

tasks.named('check') {
	dependsOn unitTest, integrationTest, acceptanceTest
}
