AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for the Etalente Backend ECS Service and associated IAM Policies

Parameters:
  ProjectName:
    Type: String
    Default: etalente
    Description: Name of the project

  BackendImageUri:
    Type: String
    Description: ECR URI for the backend Docker image

  DesiredCount:
    Type: Number
    Default: 1
    Description: The desired number of tasks for the service.

  DBMasterUserPassword:
    Type: String
    NoEcho: true
    Description: Master password for the database

  JwtSecret:
    Type: String
    NoEcho: true
    Description: The secret key for signing JWTs

  AttachLoadBalancer:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: Whether to attach the service to the Application Load Balancer.

  MagicLinkUrl:
    Type: String
    Default: "http://localhost:4200/auth/verify"
    Description: The base URL for magic links.

  InvitationLinkUrl:
    Type: String
    Default: "http://localhost:4200/invitations/accept"
    Description: The base URL for invitation links.

  InvitationExpiryHours:
    Type: String
    Default: "72"
    Description: The expiry time in hours for invitations.

  NovuApiKey:
    Type: String
    NoEcho: true
    Default: "dummy-novu-key"
    Description: The Novu API key for notifications

  CorsAllowedOrigins:
    Type: String
    Default: "http://localhost:4200"
    Description: Comma-separated list of allowed CORS origins

Conditions:
  ShouldAttachLoadBalancer: !Equals [!Ref AttachLoadBalancer, "true"]

Resources:
  # IAM Role for ECS Task Execution (pulling images, sending logs to CloudWatch)
  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ecs-task-execution-role

  # IAM Role for ECS Task (if your application needs AWS permissions)
  EcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ecs-task-role

  # IAM Policy for SES Send Email
  SesSendEmailPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-SesSendEmailPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - ses:SendEmail
              - ses:SendRawEmail
            Resource: "*"
      Roles:
        - !Ref EcsTaskRole

  S3UploadsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-S3UploadsPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
            Resource: !Sub
              - arn:aws:s3:::${BucketName}/*
              - BucketName: !ImportValue ${ProjectName}-UploadsS3BucketName
      Roles:
        - !Ref EcsTaskRole

  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ProjectName}-backend-task
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt EcsTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt EcsTaskRole.Arn
      ContainerDefinitions:
        - Name: !Sub ${ProjectName}-backend-container
          Image: !Ref BackendImageUri
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Environment:
            - Name: SPRING_DATASOURCE_URL
              Value:
                Fn::Sub:
                  - "jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/${ProjectName}"
                  - DBEndpointAddress:
                      Fn::ImportValue: !Sub "${ProjectName}-DBEndpointAddress"
                    DBEndpointPort:
                      Fn::ImportValue: !Sub "${ProjectName}-DBEndpointPort"
            - Name: SPRING_DATASOURCE_USERNAME
              Value:
                Fn::ImportValue: !Sub "${ProjectName}-DBMasterUsername"
            - Name: SPRING_DATASOURCE_PASSWORD
              Value: !Ref DBMasterUserPassword
            - Name: JWT_SECRET
              Value: !Ref JwtSecret
            - Name: MAGIC_LINK_URL
              Value: !Ref MagicLinkUrl
            - Name: INVITATION_LINK_URL
              Value: !Ref InvitationLinkUrl
            - Name: SPRING_PROFILES_ACTIVE
              Value: production
            - Name: AWS_REGION
              Value: !Ref "AWS::Region"
            - Name: NOVU_API_KEY
              Value: !Ref NovuApiKey
            - Name: CORS_ALLOWED_ORIGINS
              Value: !Ref CorsAllowedOrigins
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: ecs
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-backend-task

  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${ProjectName}-backend
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-backend-log-group

  BackendEcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub "${ProjectName}-EcsClusterName"
      ServiceName: !Sub ${ProjectName}-backend-service
      TaskDefinition: !Ref BackendTaskDefinition
      DesiredCount: !Ref DesiredCount
      LaunchType: FARGATE
      HealthCheckGracePeriodSeconds: 120
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - Fn::ImportValue: !Sub "${ProjectName}-PrivateSubnet1aId"
            - Fn::ImportValue: !Sub "${ProjectName}-PrivateSubnet1bId"
          SecurityGroups:
            - Fn::ImportValue: !Sub "${ProjectName}-EcsTasksSecurityGroupId"
      LoadBalancers: !If
        - ShouldAttachLoadBalancer
        - - ContainerName: !Sub ${ProjectName}-backend-container
            ContainerPort: 8080
            TargetGroupArn:
              Fn::ImportValue: !Sub "${ProjectName}-BackendTargetGroupArn"
        - !Ref "AWS::NoValue"
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-backend-service

Outputs:
  BackendTaskDefinitionArn:
    Description: The ARN of the Backend Task Definition
    Value: !Ref BackendTaskDefinition
    Export:
      Name: !Sub ${ProjectName}-BackendTaskDefinitionArn
  BackendEcsServiceArn:
    Description: The ARN of the Backend ECS Service
    Value: !Ref BackendEcsService
    Export:
      Name: !Sub ${ProjectName}-BackendEcsServiceArn