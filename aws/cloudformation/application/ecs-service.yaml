AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for the Etalente Backend ECS Service

Parameters:
  ProjectName:
    Type: String
    Default: etalente
    Description: Name of the project
  BackendImageUri:
    Type: String
    Description: ECR URI for the backend Docker image
  DBMasterUserPassword:
    Type: String
    NoEcho: true
    Description: Master password for the database

Resources:
  # IAM Role for ECS Task Execution (pulling images, sending logs to CloudWatch)
  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ecs-task-execution-role

  # IAM Role for ECS Task (if your application needs AWS permissions)
  EcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      # Add policies here if your application needs to access other AWS services
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ecs-task-role

  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ProjectName}-backend-task
      Cpu: 512 # 0.5 vCPU
      Memory: 1024 # 1 GB
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt EcsTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt EcsTaskRole.Arn
      ContainerDefinitions:
        - Name: !Sub ${ProjectName}-backend-container
          Image: !Ref BackendImageUri
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Environment:
            - Name: SPRING_DATASOURCE_URL
              Value: !Sub
                - 'jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/${ProjectName}'
                - { DBEndpointAddress: !ImportValue '${ProjectName}-DBEndpointAddress', DBEndpointPort: !ImportValue '${ProjectName}-DBEndpointPort' }
            - Name: SPRING_DATASOURCE_USERNAME
              Value: !Fn::ImportValue ${ProjectName}-DBMasterUsername
            - Name: SPRING_DATASOURCE_PASSWORD
              Value: !Ref DBMasterUserPassword
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: ecs
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-backend-task

  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${ProjectName}-backend
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-backend-log-group

  BackendEcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Fn::ImportValue ${ProjectName}-EcsClusterName
      ServiceName: !Sub ${ProjectName}-backend-service
      TaskDefinition: !Ref BackendTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - !Fn::ImportValue ${ProjectName}-PrivateSubnet1aId
            - !Fn::ImportValue ${ProjectName}-PrivateSubnet1bId
          SecurityGroups:
            - !Fn::ImportValue ${ProjectName}-EcsTasksSecurityGroupId
      LoadBalancers:
        - ContainerName: !Sub ${ProjectName}-backend-container
          ContainerPort: 8080
          TargetGroupArn: !Fn::ImportValue ${ProjectName}-BackendTargetGroupArn
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-backend-service

Outputs:
  BackendTaskDefinitionArn:
    Description: The ARN of the Backend Task Definition
    Value: !Ref BackendTaskDefinition
    Export:
      Name: !Sub ${ProjectName}-BackendTaskDefinitionArn
  BackendEcsServiceArn:
    Description: The ARN of the Backend ECS Service
    Value: !Ref BackendEcsService
    Export:
      Name: !Sub ${ProjectName}-BackendEcsServiceArn